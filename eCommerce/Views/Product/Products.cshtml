    @using DataLayer.DataLayer
@model DLProducts

@{
    ViewBag.Title = "Products";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@Styles.Render("~/Content/DataTablecss")
@Scripts.Render("~/bundles/DataTablejs")
<div id="viewPlaceHolder"></div>
<!--==============================Register/Update=================================-->
<div class="container">
    <button id="RegisterBtn" class="btn btn-info btn-lg">
        <span class="glyphicon glyphicon-plus"></span>
    </button>
    <div class="modal fade" id="RegisterModal" data-backdrop="static" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-body" style="padding:40px 50px;">
                    <center>
                        <span class="btn btn-primary btn-lg btn-block" id="Title">Registration</span>
                        <br />
                        @using (Html.BeginForm("Products", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" id="ProductId" name="ProductId" value="ProductId" />
                            <table align="center">
                                <tr>
                                    <td rowspan="2" id="ImageEdit"></td>
                                    <td>
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name", maxLenth = "15" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger  " })
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description", maxLenth = "500" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger  " })
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Price", maxLenth = "7", type="number" } }) </td>
                                    <td>@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger  " })</td>
                                </tr>
                                <tr>
                                    <td colspan="3">
                                        @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control", placeholder = "SKU", maxLenth = "15" } })
                                    </td>
                                    <td>@Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger  " })</td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.EditorFor(model => model.UPC, new { htmlAttributes = new { @class = "form-control", placeholder = "UPC", maxLenth = "15" } }) </td>
                                    <td>@Html.ValidationMessageFor(model => model.UPC, "", new { @class = "text-danger  " }) </td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.EditorFor(model => model.TotalQty, new { htmlAttributes = new { @class = "form-control", placeholder = "TotalQty", type = "number", min = "0" } }) </td>
                                    <td>@Html.ValidationMessageFor(model => model.TotalQty, "", new { @class = "text-danger  " }) </td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.EditorFor(model => model.BrandName, new { htmlAttributes = new { @class = "form-control", placeholder = "BrandName" } }) </td>
                                    <td>@Html.ValidationMessageFor(model => model.BrandName, "", new { @class = "text-danger  " }) </td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.DropDownListFor(model => model.FashionFor, new SelectList(Enum.GetValues(typeof(DataLayer.DataLayer.FashionFor))), "FashionFor", new { @class = "form-control" })</td>
                                    <td>@Html.ValidationMessageFor(model => model.FashionFor, "", new { @class = "text-danger  " })</td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.DropDownListFor(model => model.IsOutOfStock, new SelectList(Enum.GetValues(typeof(DataLayer.DataLayer.TrueFalse))), "IsOutOfStock", new { @class = "form-control" })</td>
                                    <td>@Html.ValidationMessageFor(model => model.IsOutOfStock, "", new { @class = "text-danger  " })</td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.DropDownListFor(model => model.IsFeaturedProduct, new SelectList(Enum.GetValues(typeof(DataLayer.DataLayer.TrueFalse))), "IsFeaturedProduct", new { @class = "form-control" }) </td>
                                    <td>@Html.ValidationMessageFor(model => model.IsFeaturedProduct, "", new { @class = "text-danger  " }) </td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.DropDownListFor(model => model.IsLatestProduct, new SelectList(Enum.GetValues(typeof(DataLayer.DataLayer.TrueFalse))), "IsLatestProduct", new { @class = "form-control" }) </td>
                                    <td>@Html.ValidationMessageFor(model => model.IsLatestProduct, "", new { @class = "text-danger  " }) </td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.DropDownListFor(model => model.IsPopular, new SelectList(Enum.GetValues(typeof(DataLayer.DataLayer.TrueFalse))), "IsPopular", new { @class = "form-control" }) </td>
                                    <td>@Html.ValidationMessageFor(model => model.IsPopular, "", new { @class = "text-danger  " }) </td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", placeholder = "Remarks" } }) </td>
                                    <td>@Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger  " }) </td>
                                </tr>
                                <tr>
                                    <td colspan="3">@Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.Categories, "Select Category", new { @class = "form-control" })</td>
                                    <td>@Html.ValidationMessageFor(model => model.CategoryId, "", new { @style = "color:red" })</td>
                                </tr>
                                <tr>
                                    <td colspan="3"><input type="file" id="Image" name="postedFiles" multiple="multiple" /></td>
                                    <td> </td>
                                </tr>
                                <tr>
                                    <td colspan="4">
                                        <center>
                                            <button type="submit" value="Save" name="save" id="save" onclick="return Validate();" class="btn btn-primary"> <span class="glyphicon glyphicon-user"></span> Register</button>
                                            @*<span class="input-group-addon">  </span>*@
                                            <button type="submit" value="Edit" name="edit" id="edit" onclick="return Validate();" style="display:none;" class="btn btn-primary"> <span class="glyphicon glyphicon-user"></span> Update</button>
                                            @*<span class="input-group-addon">  </span>*@
                                            <button type="reset" id="reset" name="reset" class="btn btn-primary">  Clear</button>
                                            @*<span class="input-group-addon">  </span>*@
                                            <button type="submit" class="btn btn-danger" onclick="clearModal();" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
                                        </center>
                                    </td>
                                </tr>
                            </table>
                            <br />
                            @Html.ValidationSummary(true, "* Mandatory Fields", new { style = "color:red" })

                        }
                    </center>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $("#RegisterBtn").click(function () {
        $("#RegisterModal").modal();
    });

</script>
<!--==============================End Register/Update=================================-->

<table id="ProductTable" class="table table-striped table-bordered dt-responsive nowrap" cellspacing="0" width="100%">
    <thead>
        <tr>
            <th>Name</th>
            <th>Image</th>
           
            <th>Description</th>
            
            <th>Price</th>
            
            <th>SKU</th>
            <th>UPC</th>
            <th>TotalQty</th>
            <th>BrandName</th>
            
         
            <th>IsOutOfStock</th>
            <th>IsFeaturedProduct</th>
            <th>IsLatestProduct</th>
            <th>IsPopular</th>
            <th>Remarks</th>
            <th>Category</th>
            <th>FashionFor</th>
            <th>Edit</th>
            <th>Delete</th>
            <th></th>

        </tr>
    </thead>
    <tbody></tbody>
</table>
@Scripts.Render("~/Scripts/js/Product.js")
@*<script src="~/Scripts/Product.js"></script>*@